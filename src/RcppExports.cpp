// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// logDensitiesBestWorst
NumericVector logDensitiesBestWorst(NumericMatrix e_u, NumericVector weights);
RcppExport SEXP flipMaxDiff_logDensitiesBestWorst(SEXP e_uSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type e_u(e_uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(logDensitiesBestWorst(e_u, weights));
    return rcpp_result_gen;
END_RCPP
}
// logDensityBestWorst
double logDensityBestWorst(NumericMatrix e_u, NumericVector weights);
RcppExport SEXP flipMaxDiff_logDensityBestWorst(SEXP e_uSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type e_u(e_uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(logDensityBestWorst(e_u, weights));
    return rcpp_result_gen;
END_RCPP
}
// gradientBestWorst
NumericVector gradientBestWorst(NumericMatrix e_u, IntegerMatrix x, NumericVector weights, int n_pars);
RcppExport SEXP flipMaxDiff_gradientBestWorst(SEXP e_uSEXP, SEXP xSEXP, SEXP weightsSEXP, SEXP n_parsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type e_u(e_uSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int >::type n_pars(n_parsSEXP);
    rcpp_result_gen = Rcpp::wrap(gradientBestWorst(e_u, x, weights, n_pars));
    return rcpp_result_gen;
END_RCPP
}
